The testing file

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", "www")
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", -2)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("", 2)
>>> bg.integer_validator(3, 2)
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("width")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", (7,))
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", False)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", {3,4})
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("age", 7.74)
Traceback (most recent call last):
...
TypeError: age must be an integer
